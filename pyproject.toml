[tool.poetry]
name = "pyklopp"
version = "0.3.1"
description = ""
authors = [
    "Julian Stier <julian.stier@uni-passau.de>"
]
license = "MIT"

include = [
    "pyproject.toml",
    "README.md"
]

readme = "README.md"

homepage = "https://github.com/innvariant/pyklopp"
repository = "https://github.com/innvariant/pyklopp"
documentation = "https://github.com/innvariant/pyklopp"

keywords = ["machine learning", "inference", "training"]

[tool.poetry.dependencies]
python = "^3.6.1"
cleo = "^0.7"
torch = ">=1.3"
torchvision = ">=0.4"
pytorch-ignite = "^0.2"
tqdm = "^4.40"
importlib-metadata = "^1.5.0"
jsonschema = "^3.2.0"
importlib-resources = "^1.4.0"
semantic_version = "^2.8.4"

[tool.poetry.dev-dependencies]
pytest = "^3.0"
pytest-mock = "^3.0.0"
pyfakefs = "^4.0.2"
black = { version = "^19.10b0", python = "^3.6" }
pre-commit = "^2.3.0"

[tool.poetry.scripts]
pyklopp = "pyklopp.console:main"

[tool.isort]
line_length = 88
force_single_line = true
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
multi_line_output = 3
use_parentheses = true
not_skip = "__init__.py"
skip_glob = ["*/setup.py", "res/"]
filter_files = true
known_first_party = "pyklopp"
known_third_party = ["cleo", "ignite", "importlib_metadata", "importlib_resources", "jsonschema", "numpy", "pyfakefs", "pytest", "semantic_version", "torch", "torchvision"]

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | res
  | build
  | dist
  | tests/.*/setup.py
)/
'''

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
